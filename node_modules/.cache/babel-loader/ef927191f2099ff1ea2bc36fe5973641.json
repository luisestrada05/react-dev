{"ast":null,"code":"var _jsxFileName = \"/home/thsluis/Escritorio/devOps/react-dev/src/components/Categories/FormCategories.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport api from \"../../services/api.js\";\nimport DropDown from \"../DropDown/DropDown.js\";\nimport \"./FormCategories.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Categories = props => {\n  _s();\n\n  let history = useHistory();\n  const [contry, setContry] = useState(\"\");\n  const [categorie, setCategorie] = useState(\"\");\n  const [listCategories, setListCategories] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [validContry, setValidContry] = useState(true);\n  const [validCategories, setValidCategories] = useState(true);\n  const LISTCONTRYS = [{\n    id: \"US\",\n    name: \"USA\"\n  }, {\n    id: \"AU\",\n    name: \"AUSTRIA\"\n  }, {\n    id: \"BR\",\n    name: \"BRASIL\"\n  }, {\n    id: \"CA\",\n    name: \"CANADA\"\n  }, {\n    id: \"FR\",\n    name: \"FRANCIA\"\n  }, {\n    id: \"IN\",\n    name: \"REINO UNIDO\"\n  }];\n\n  const getProducts = params => {\n    setLoading(true);\n    api.getCategories(params).then(resp => {\n      setLoading(false);\n\n      if (resp.data === 0) {\n        toast.warning(\"No se encontro información.\", {\n          position: \"bottom-right\"\n        });\n      } else {\n        setListCategories(resp.data);\n      }\n    }, err => {\n      setLoading(false);\n      toast.error(\"ERROR. Favor de comunicarse con sistemas.\", {\n        position: \"bottom-right\"\n      });\n    });\n  };\n\n  const contryHandler = event => {\n    setValidContry(true);\n    setContry(event);\n    getProducts(event);\n  };\n\n  const categoriesHandler = event => {\n    setValidCategories(true);\n    setCategorie(event);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (contry.trim().length === 0 || categorie.trim().length === 0) {\n      setValidContry(!contry.trim().length === 0);\n      setValidCategories(!categorie.trim().length === 0);\n      return;\n    }\n\n    const objSession = {\n      country: contry,\n      categoryID: categorie\n    };\n    localStorage.setItem(\"parameters\", JSON.stringify(objSession));\n    history.push(`/info/${contry}/${categorie}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"HOLA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Categories, \"Vady3fv4K6XC5GEWRG90bXenYQA=\", false, function () {\n  return [useHistory];\n});\n\n_c = Categories;\nexport default Categories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"sources":["/home/thsluis/Escritorio/devOps/react-dev/src/components/Categories/FormCategories.js"],"names":["React","useState","useEffect","useHistory","api","DropDown","ToastContainer","toast","Categories","props","history","contry","setContry","categorie","setCategorie","listCategories","setListCategories","loading","setLoading","error","setError","validContry","setValidContry","validCategories","setValidCategories","LISTCONTRYS","id","name","getProducts","params","getCategories","then","resp","data","warning","position","err","contryHandler","event","categoriesHandler","handleSubmit","preventDefault","trim","length","objSession","country","categoryID","localStorage","setItem","JSON","stringify","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport api from \"../../services/api.js\";\nimport DropDown from \"../DropDown/DropDown.js\";\nimport \"./FormCategories.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst Categories = (props) => {\n  let history = useHistory();\n  const [contry, setContry] = useState(\"\");\n  const [categorie, setCategorie] = useState(\"\");\n  const [listCategories, setListCategories] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [validContry, setValidContry] = useState(true);\n  const [validCategories, setValidCategories] = useState(true);\n\n  const LISTCONTRYS = [\n    { id: \"US\", name: \"USA\" },\n    { id: \"AU\", name: \"AUSTRIA\" },\n    { id: \"BR\", name: \"BRASIL\" },\n    { id: \"CA\", name: \"CANADA\" },\n    { id: \"FR\", name: \"FRANCIA\" },\n    { id: \"IN\", name: \"REINO UNIDO\" },\n  ];\n\n\n  const getProducts = (params) => {\n    setLoading(true);\n    api.getCategories(params).then(\n      (resp) => {\n        setLoading(false);\n        if (resp.data === 0) {\n          toast.warning(\"No se encontro información.\", {\n            position: \"bottom-right\",\n          });\n          \n        } else {\n          setListCategories(resp.data);\n        }\n      },\n      (err) => {\n        setLoading(false);\n        toast.error(\"ERROR. Favor de comunicarse con sistemas.\", {\n          position: \"bottom-right\"});\n      }\n    );\n  };\n\n  const contryHandler = (event) => {\n    setValidContry(true);\n    setContry(event);\n    getProducts(event);\n  };\n\n  const categoriesHandler = (event) => {\n    setValidCategories(true);\n    setCategorie(event);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (contry.trim().length === 0 || categorie.trim().length === 0) {\n      setValidContry(!contry.trim().length === 0);\n      setValidCategories(!categorie.trim().length === 0);\n      return;\n    }\n    const objSession = {\n      country: contry,\n      categoryID: categorie,\n    };\n    localStorage.setItem(\"parameters\", JSON.stringify(objSession));\n    history.push(`/info/${contry}/${categorie}`);\n  };\n\n  return (\n    <div>\n\n      <ToastContainer />\n<p>HOLA</p>\n    </div>\n  );\n};\n\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}