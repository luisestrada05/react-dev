{"ast":null,"code":"var _jsxFileName = \"/home/thsluis/Escritorio/devOps/react-dev/src/components/Categories/FormCategories.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport api from \"../../services/api.js\";\nimport DropDown from \"../DropDown/DropDown.js\";\nimport './FormCategories.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Categories = props => {\n  _s();\n\n  const [isContry, setContry] = useState(\"\");\n  const [isCategorie, setCategorie] = useState(\"\");\n  const [isListContrys, setListContrys] = useState([]);\n  const [isListCategories, setListCategories] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [isError, setError] = useState(\"\");\n  const LISTCONTRYS = [{\n    id: \"US\",\n    name: \"USA\"\n  }, {\n    id: \"AU\",\n    name: \"AUSTRIA\"\n  }, {\n    id: \"BR\",\n    name: \"BRASIL\"\n  }, {\n    id: \"CA\",\n    name: \"CANADA\"\n  }, {\n    id: \"FR\",\n    name: \"FRANCIA\"\n  }, {\n    id: \"IN\",\n    name: \"REINO UNIDO\"\n  }];\n  const LISTCATEGORIAS = [{\n    id: \"abc\",\n    name: \"PRUEBA 1\"\n  }, {\n    id: \"dfg\",\n    name: \"PRUEBA 2\"\n  }];\n\n  const getProducts = params => {\n    setLoading(true);\n    api.getProducts(params).then(resp => {\n      setListCategories(resp.data);\n      setLoading(false);\n    }, err => {\n      setLoading(false);\n      setError(\"ERROR. Favor de comunicarse con sistemas.\");\n    });\n  };\n\n  const contryHandler = event => {\n    console.log(event);\n    setContry(preStatus => {\n      return event;\n    });\n  };\n\n  const categoriesHandler = event => {\n    console.log(event);\n    setCategorie(preStatus => {\n      return event;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contenedor\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"categorias\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(DropDown, {\n          onChangeFilter: contryHandler,\n          label: \"Seleciona País:\",\n          items: LISTCONTRYS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DropDown, {\n          onChangeFilter: categoriesHandler,\n          label: \"Seleciona Categoria:\",\n          items: LISTCATEGORIAS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Categories, \"XQEdsaPisj0ZjfwqAmhPyxN7krw=\");\n\n_c = Categories;\nexport default Categories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"sources":["/home/thsluis/Escritorio/devOps/react-dev/src/components/Categories/FormCategories.js"],"names":["React","useState","api","DropDown","Categories","props","isContry","setContry","isCategorie","setCategorie","isListContrys","setListContrys","isListCategories","setListCategories","isLoading","setLoading","isError","setError","LISTCONTRYS","id","name","LISTCATEGORIAS","getProducts","params","then","resp","data","err","contryHandler","event","console","log","preStatus","categoriesHandler"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport api from \"../../services/api.js\";\nimport DropDown from \"../DropDown/DropDown.js\";\nimport './FormCategories.css'\n\nconst Categories = (props) => {\n  const [isContry, setContry] = useState(\"\");\n  const [isCategorie, setCategorie] = useState(\"\");\n  const [isListContrys, setListContrys] = useState([]);\n  const [isListCategories, setListCategories] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [isError, setError] = useState(\"\");\n\n  const LISTCONTRYS = [\n    { id: \"US\", name: \"USA\" },\n    { id: \"AU\", name: \"AUSTRIA\" },\n    { id: \"BR\", name: \"BRASIL\" },\n    { id: \"CA\", name: \"CANADA\" },\n    { id: \"FR\", name: \"FRANCIA\" },\n    { id: \"IN\", name: \"REINO UNIDO\" }\n  ];\n\n  const LISTCATEGORIAS = [\n    { id: \"abc\", name: \"PRUEBA 1\" },\n    { id: \"dfg\", name: \"PRUEBA 2\" }\n  ];\n  const getProducts = (params) => {\n    setLoading(true);\n    api.getProducts(params).then(\n      (resp) => {\n        setListCategories(resp.data);\n        setLoading(false);\n      },\n      (err) => {\n        setLoading(false);\n        setError(\"ERROR. Favor de comunicarse con sistemas.\");\n      }\n    );\n  };\n\n  const contryHandler = (event) => {\n    console.log(event);\n    setContry((preStatus) => {\n      return event;\n    });\n  };\n\n  const categoriesHandler = (event) => {\n    console.log(event);\n    setCategorie((preStatus) => {\n      return event;\n    });\n  };\n\n  return (\n    <div className=\"contenedor\">\n      <div className=\"categorias\">\n        <form>\n          <DropDown\n            onChangeFilter={contryHandler}\n            label={\"Seleciona País:\"}\n            items={LISTCONTRYS}\n          ></DropDown>\n          <DropDown\n            onChangeFilter={categoriesHandler}\n            label={\"Seleciona Categoria:\"}\n            items={LISTCATEGORIAS}\n          ></DropDown>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}