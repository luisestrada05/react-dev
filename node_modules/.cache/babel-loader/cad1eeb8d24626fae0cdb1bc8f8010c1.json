{"ast":null,"code":"var _jsxFileName = \"/home/thsluis/Escritorio/devOps/react-dev/src/components/Products/Products.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Filter from \"../Filter/Filter\";\nimport \"./Products.css\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport { useParams } from \"react-router-dom\";\nimport api from \"../../services/api\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Products = props => {\n  _s();\n\n  const PRODUCTS = [{\n    contry: \"1\",\n    JobTitle: \"Chef Manager\",\n    EmailAddress: \"Julian_Vallins9159@gembat.biz\",\n    FirstNameLastName: \"Julian Vallins\"\n  }, {\n    contry: \"2\",\n    JobTitle: \"Cash Manager\",\n    EmailAddress: \"Benjamin_Owen7178@famism.biz\",\n    FirstNameLastName: \"Benjamin Owen\"\n  }, {\n    contry: \"3\",\n    JobTitle: \"Business Broker\",\n    EmailAddress: \"Hadley_Shaw689@liret.org\",\n    FirstNameLastName: \"Hadley Shaw\"\n  }, {\n    contry: \"4\",\n    JobTitle: \"Cash Manager\",\n    EmailAddress: \"Agnes_Lewin9759@jiman.org\",\n    FirstNameLastName: \"Agnes Lewin\"\n  }];\n  let history = useHistory();\n  let {\n    country,\n    categoryID\n  } = useParams();\n  const [isFilter, setFiltered] = useState(\"\");\n  const [isLoading, setLoading] = useState(false);\n  const [isError, setError] = useState(\"\");\n  const [isListProducts, setListProducts] = useState([]);\n  const [isRedirect, setRedirect] = useState(false);\n  useEffect(() => {\n    const validateParams = !validateEmptyData(country) && !validateEmptyData(categoryID);\n    const parSession = !validateEmptyData(localStorage.getItem(\"parameters\"));\n    console.log(localStorage.getItem(\"parameters\"));\n    console.log(localStorage.getItem(country, categoryID));\n\n    if (!validateParams && !parSession) {\n      history.push(\"/\");\n    } else {\n      if (validateParams) {\n        getProductsPar({\n          country,\n          categoryID\n        });\n      } else {\n        getProductsPar(JSON.parse(parSession));\n      }\n    }\n  }, []);\n\n  const getProductsPar = params => {\n    setLoading(true);\n    api.getProducts(params).then(resp => {\n      setLoading(false);\n      setListProducts(PRODUCTS);\n      setRedirect(true);\n    }, err => {\n      setListProducts(PRODUCTS);\n      setLoading(false);\n      setError(err);\n    });\n  };\n\n  const validateEmptyData = data => {\n    let validate = false;\n\n    if (data === undefined || data === null || data === \"\") {\n      validate = true;\n    }\n\n    return validate;\n  };\n\n  const filterChangeHandler = filter => {\n    setFiltered(filter);\n  };\n\n  const filteredListProduct = isListProducts.filter(product => {\n    if (isFilter.trim().length > 0) {\n      return product.JobTitle.toLowerCase().indexOf(isFilter.toLowerCase()) > -1;\n    } else {\n      return isListProducts;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buscador\",\n      children: [/*#__PURE__*/_jsxDEV(Filter, {\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ReactHTMLTableToExcel, {\n          className: \"btn btn-success\",\n          table: \"producto\",\n          filename: \"Productos\",\n          sheet: \"pagina 1\",\n          buttonText: \"Exportar a Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contenedor-tabla\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        id: \"producto\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"First\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Last\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Handle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredListProduct.map((prodcut, index) => {\n            return [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: prodcut.contry\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: prodcut.JobTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: prodcut.EmailAddress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                children: prodcut.FirstNameLastName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)];\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Products, \"q0j0Hu14qV6E8fFAyASscN5ZJCk=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/home/thsluis/Escritorio/devOps/react-dev/src/components/Products/Products.js"],"names":["React","useState","useEffect","Filter","ReactHTMLTableToExcel","useParams","api","useHistory","Products","props","PRODUCTS","contry","JobTitle","EmailAddress","FirstNameLastName","history","country","categoryID","isFilter","setFiltered","isLoading","setLoading","isError","setError","isListProducts","setListProducts","isRedirect","setRedirect","validateParams","validateEmptyData","parSession","localStorage","getItem","console","log","push","getProductsPar","JSON","parse","params","getProducts","then","resp","err","data","validate","undefined","filterChangeHandler","filter","filteredListProduct","product","trim","length","toLowerCase","indexOf","map","prodcut","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAO,gBAAP;AACA,OAAOC,qBAAP,MAAkC,2BAAlC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,QAAQ,GAAG,CACf;AACEC,IAAAA,MAAM,EAAE,GADV;AAEEC,IAAAA,QAAQ,EAAE,cAFZ;AAGEC,IAAAA,YAAY,EAAE,+BAHhB;AAIEC,IAAAA,iBAAiB,EAAE;AAJrB,GADe,EAOf;AACEH,IAAAA,MAAM,EAAE,GADV;AAEEC,IAAAA,QAAQ,EAAE,cAFZ;AAGEC,IAAAA,YAAY,EAAE,8BAHhB;AAIEC,IAAAA,iBAAiB,EAAE;AAJrB,GAPe,EAaf;AACEH,IAAAA,MAAM,EAAE,GADV;AAEEC,IAAAA,QAAQ,EAAE,iBAFZ;AAGEC,IAAAA,YAAY,EAAE,0BAHhB;AAIEC,IAAAA,iBAAiB,EAAE;AAJrB,GAbe,EAmBf;AACEH,IAAAA,MAAM,EAAE,GADV;AAEEC,IAAAA,QAAQ,EAAE,cAFZ;AAGEC,IAAAA,YAAY,EAAE,2BAHhB;AAIEC,IAAAA,iBAAiB,EAAE;AAJrB,GAnBe,CAAjB;AA0BA,MAAIC,OAAO,GAAGR,UAAU,EAAxB;AACA,MAAI;AAAES,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA0BZ,SAAS,EAAvC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACmB,SAAD,EAAYC,UAAZ,IAA0BpB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACqB,OAAD,EAAUC,QAAV,IAAsBtB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACuB,cAAD,EAAiBC,eAAjB,IAAoCxB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACyB,UAAD,EAAaC,WAAb,IAA4B1B,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM0B,cAAc,GAClB,CAACC,iBAAiB,CAACb,OAAD,CAAlB,IAA+B,CAACa,iBAAiB,CAACZ,UAAD,CADnD;AAEA,UAAMa,UAAU,GAAG,CAACD,iBAAiB,CAACE,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAD,CAArC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,YAAY,CAACC,OAAb,CAAqBhB,OAArB,EAA8BC,UAA9B,CAAZ;;AACA,QAAI,CAACW,cAAD,IAAmB,CAACE,UAAxB,EAAoC;AAClCf,MAAAA,OAAO,CAACoB,IAAR,CAAa,GAAb;AACD,KAFD,MAEO;AACL,UAAIP,cAAJ,EAAoB;AAClBQ,QAAAA,cAAc,CAAC;AAAEpB,UAAAA,OAAF;AAAWC,UAAAA;AAAX,SAAD,CAAd;AACD,OAFD,MAEO;AACLmB,QAAAA,cAAc,CAACC,IAAI,CAACC,KAAL,CAAWR,UAAX,CAAD,CAAd;AACD;AACF;AACF,GAfQ,EAeN,EAfM,CAAT;;AAiBA,QAAMM,cAAc,GAAIG,MAAD,IAAY;AACjClB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAf,IAAAA,GAAG,CAACkC,WAAJ,CAAgBD,MAAhB,EAAwBE,IAAxB,CACGC,IAAD,IAAU;AACRrB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAI,MAAAA,eAAe,CAACf,QAAD,CAAf;AACAiB,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KALH,EAMGgB,GAAD,IAAS;AACPlB,MAAAA,eAAe,CAACf,QAAD,CAAf;AACAW,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACoB,GAAD,CAAR;AACD,KAVH;AAYD,GAdD;;AAgBA,QAAMd,iBAAiB,GAAIe,IAAD,IAAU;AAClC,QAAIC,QAAQ,GAAG,KAAf;;AACA,QAAID,IAAI,KAAKE,SAAT,IAAsBF,IAAI,KAAK,IAA/B,IAAuCA,IAAI,KAAK,EAApD,EAAwD;AACtDC,MAAAA,QAAQ,GAAG,IAAX;AACD;;AACD,WAAOA,QAAP;AACD,GAND;;AAQA,QAAME,mBAAmB,GAAIC,MAAD,IAAY;AACtC7B,IAAAA,WAAW,CAAC6B,MAAD,CAAX;AACD,GAFD;;AAIA,QAAMC,mBAAmB,GAAGzB,cAAc,CAACwB,MAAf,CAAuBE,OAAD,IAAa;AAC7D,QAAIhC,QAAQ,CAACiC,IAAT,GAAgBC,MAAhB,GAAyB,CAA7B,EAAgC;AAC9B,aACEF,OAAO,CAACtC,QAAR,CAAiByC,WAAjB,GAA+BC,OAA/B,CAAuCpC,QAAQ,CAACmC,WAAT,EAAvC,IAAiE,CAAC,CADpE;AAGD,KAJD,MAIO;AACL,aAAO7B,cAAP;AACD;AACF,GAR2B,CAA5B;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,cAAc,EAAEuB;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BACE,QAAC,qBAAD;AACE,UAAA,SAAS,EAAC,iBADZ;AAEE,UAAA,KAAK,EAAC,UAFR;AAGE,UAAA,QAAQ,EAAC,WAHX;AAIE,UAAA,KAAK,EAAC,UAJR;AAKE,UAAA,UAAU,EAAC;AALb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAcE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAyB,QAAA,EAAE,EAAC,UAA5B;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAI,cAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAA,oBACGE,mBAAmB,CAACM,GAApB,CAAwB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC3C,mBAAO,cACL;AAAA,sCACE;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA,0BAAiBD,OAAO,CAAC7C;AAAzB;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA,0BAAiB6C,OAAO,CAAC5C;AAAzB;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA,0BAAiB4C,OAAO,CAAC3C;AAAzB;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE;AAAI,gBAAA,KAAK,EAAC,KAAV;AAAA,0BAAiB2C,OAAO,CAAC1C;AAAzB;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA,eAAS2C,KAAT;AAAA;AAAA;AAAA;AAAA,oBADK,CAAP;AAQD,WATA;AADH;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD,CAnID;;GAAMjD,Q;UA2BUD,U,EACgBF,S;;;KA5B1BG,Q;AAqIN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Filter from \"../Filter/Filter\";\nimport \"./Products.css\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport { useParams } from \"react-router-dom\";\nimport api from \"../../services/api\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Products = (props) => {\n  const PRODUCTS = [\n    {\n      contry: \"1\",\n      JobTitle: \"Chef Manager\",\n      EmailAddress: \"Julian_Vallins9159@gembat.biz\",\n      FirstNameLastName: \"Julian Vallins\",\n    },\n    {\n      contry: \"2\",\n      JobTitle: \"Cash Manager\",\n      EmailAddress: \"Benjamin_Owen7178@famism.biz\",\n      FirstNameLastName: \"Benjamin Owen\",\n    },\n    {\n      contry: \"3\",\n      JobTitle: \"Business Broker\",\n      EmailAddress: \"Hadley_Shaw689@liret.org\",\n      FirstNameLastName: \"Hadley Shaw\",\n    },\n    {\n      contry: \"4\",\n      JobTitle: \"Cash Manager\",\n      EmailAddress: \"Agnes_Lewin9759@jiman.org\",\n      FirstNameLastName: \"Agnes Lewin\",\n    },\n  ];\n  let history = useHistory();\n  let { country, categoryID } = useParams();\n  const [isFilter, setFiltered] = useState(\"\");\n  const [isLoading, setLoading] = useState(false);\n  const [isError, setError] = useState(\"\");\n  const [isListProducts, setListProducts] = useState([]);\n  const [isRedirect, setRedirect] = useState(false);\n\n  useEffect(() => {\n    const validateParams =\n      !validateEmptyData(country) && !validateEmptyData(categoryID);\n    const parSession = !validateEmptyData(localStorage.getItem(\"parameters\"));\n    console.log(localStorage.getItem(\"parameters\"));\n    console.log(localStorage.getItem(country, categoryID));\n    if (!validateParams && !parSession) {\n      history.push(\"/\");\n    } else {\n      if (validateParams) {\n        getProductsPar({ country, categoryID });\n      } else {\n        getProductsPar(JSON.parse(parSession));\n      }\n    }\n  }, []);\n\n  const getProductsPar = (params) => {\n    setLoading(true);\n    api.getProducts(params).then(\n      (resp) => {\n        setLoading(false);\n        setListProducts(PRODUCTS);\n        setRedirect(true);\n      },\n      (err) => {\n        setListProducts(PRODUCTS);\n        setLoading(false);\n        setError(err);\n      }\n    );\n  };\n\n  const validateEmptyData = (data) => {\n    let validate = false;\n    if (data === undefined || data === null || data === \"\") {\n      validate = true;\n    }\n    return validate;\n  };\n\n  const filterChangeHandler = (filter) => {\n    setFiltered(filter);\n  };\n\n  const filteredListProduct = isListProducts.filter((product) => {\n    if (isFilter.trim().length > 0) {\n      return (\n        product.JobTitle.toLowerCase().indexOf(isFilter.toLowerCase()) > -1\n      );\n    } else {\n      return isListProducts;\n    }\n  });\n\n  return (\n    <div className=\"mt-5\">\n      <div className=\"buscador\">\n        <Filter onChangeFilter={filterChangeHandler}></Filter>\n        <div>\n          <ReactHTMLTableToExcel\n            className=\"btn btn-success\"\n            table=\"producto\"\n            filename=\"Productos\"\n            sheet=\"pagina 1\"\n            buttonText=\"Exportar a Excel\"\n          ></ReactHTMLTableToExcel>\n        </div>\n      </div>\n\n      <div className=\"contenedor-tabla\">\n        <table className=\"table\" id=\"producto\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">First</th>\n              <th scope=\"col\">Last</th>\n              <th scope=\"col\">Handle</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredListProduct.map((prodcut, index) => {\n              return [\n                <tr key={index}>\n                  <th scope=\"col\">{prodcut.contry}</th>\n                  <th scope=\"col\">{prodcut.JobTitle}</th>\n                  <th scope=\"col\">{prodcut.EmailAddress}</th>\n                  <th scope=\"col\">{prodcut.FirstNameLastName}</th>\n                </tr>,\n              ];\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}